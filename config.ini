
[general]
apirequests = 3
seconds = 5
# (Number for seconds )Above configuration allows 3 requests every 5 seconds. Slacks claims to allow 1 request per 1 second. Please do not use more aggressive settings than 3 requests per 5 seconds or you are risking getting rate limited (HTTP 429) by Slack.  If you are using also other bots, please adjust accordingly, or make your bots use the counter provided in the apirate.py 
bottoken = xoxb-2V
# This is the token for the bot that will send the messages 
teamurl = https://sakotrade.slack.com
# (an https link with the team's URL in slack without '/' at the end ex: https://teamurl.slack.com )
bigslack = NO
# (YES/NO) If you have more than 20000 users (actual limit might be closer to 25000 but not need to risk it ) , please use YES on the above or many functions will not work. The YES, when set enables querying the users with pagination. It is slower, since it takes up to 15 seconds for each 1000 of users. So starting of the real-time functions will take 15secs*thousands of users
admintoken = xoxp-2e
#(A token starting with xoxp )This is the token for the user that will kick users,set topics and pins, and delete files, messages and pins. This user must be in the workspace admins. 

[reminders]
usertoken = xoxp-2e
# (A token starting with xoxp )This is the token for the user that will request the reminders
rperiod = 86400
# (integer counting seconds )How often will the reminder send operation restart in seconds
botroomid = G7AL5N7M0 
# ( A single slack channel ID )The channel that the reminder bot will send reports to
remindertxt = Hello!
    This is a text that follows slack guidelines *for*  _formating_ `about` links and usernames
    Make sure to change them to reflect your values if you are to use those
    <@USLACKBOT|slackbot> <- This is a username
    <https://slack-files.com/T5L09JNUA-F6XLDJ4Q6-18eb910248| a *SCAM* phising email >  <- this is a url
    *<#C5L1R4QAL|general>*  <- This is a channel  :slightly_smiling_face: 

# (text that follows slack guideliness for formatting ) Above is example text. !! IMPORTANT !! Make sure that for new lines you have to indent the  text like the above example or else you will get an error.

[sendmsgs]
enabled = msg1,msg2
# (comma separated or multiple message to be enabled for automatic sending . example msg1,msg2) Only the messages enabled above will be displayed. 
msg1 = Hello, it is Slack so be careful
    This is a new line so it is indented (it's more inside than the line above)
    This is another new line.
# (text that follows slack guideliness for formatting ) Above is example text. !! IMPORTANT !! Make sure that for new lines you have to indent the  text like the above example or else you will get an error.
    
speriod1 = 1800
#( An integer number counting seconds) The period in seconds that you want this message to  get repeated 
offset1 = 900
# (An integer number counting seconds ) In case you have two messages that you want to repeat every  X seconds, since both of them would arrive at the X second mark, the offset value adds seconds to one of those. If you have two messages  both set to 100 seconds and one has offset 30, they will be both be sent every 100 seconds but will have a 30 seconds difference.
room1 = G6GUDUN22,C625Y7FDF
# (A single or comma separated list of slack channel IDs ) The ID of the room you want the message to be sent. Add comma separated values for multiple rooms

msg2 = Message number two , also spanning
    two lines with indents
speriod2 = 1800
offset2 = 0
room2 = C622QR1NC

# The above message is being sent to two rooms.

msg3=x
speriod3=0
offset3=0
room3=c

#  This 3rd message/period/offset/room combination is not used because it is not set in 'enabled'. It's OK. If you want to add more messages and rooms combinations, please add msg4,mgs5, etc , and put those on 'enabled'

[realtime]

    webtoken = xoxs-27
    #(xoxs-token extracted from the Web UI )The above token needs to be extracted from the web ui so that banning with command is possible. Instructions for extracting are in the README.md file
    xid = 5b794343-
    # (xid id extracted from the Web UI , it has "-" at the end  ) The above ID needs to be extracted from the web ui so that banning   with command is possible. Instructions for extracting are in the README.md file
    [simplecommands]
    enabled =  comm1,comm2
    #(single or comma separated list of  commands that are enabled , example comm1,comm2)
    comm1 =  !faq
    # (preceding character and command that triggers the below reply )above is the command that needs to be typed in order to give the answer below. We will match any or none occurence before and after it, being case insensitive so faQ and faq! and #faq will work
    text1 =  Please visit <https://slack-files.com/T5L09JNUA-F6W3SRDP1-3ec0f7dbcb| *this* > page for our list of FAQ and other useful information
    # (text that follows slack guideliness for formatting ) You can put a hyperlink in the above text field to a slack post. Create a new slack post, make it public, give permissions to the moderators to edit/maintain it  and share the public link with the command
    comm2 =  !test
    text2 = This is the test message
    comm3 = $hello
    text3 = Greetings!
    
    #you can add more command and text pairs, remember to enable them!
    
    [seccommands]
    mute =   !mute
    #  (preceding character and name of the mute command, example !mute)if you tupe the above command and @username, the user will be muted. For example !mute @user1 . Muted users have everything they type ( on channels where the bot is ) deleted and are kicked out from the room when they type anything so they  should rejoin. This is to protect  the api rate threshold from being reached by a user contanstly typing stuff and the bot deleting those.
    unmute =  !unmute
    #  (preceding character and name of the unmute command, example !unmute)if you tupe the above command and @username, the user will be unmuted. For example !unmute @user1 . 
    ban =  !ban
    #  (preceding character and name of the ban command, example !ban)if you tupe the above command and @username, the users account will be deactivated. For example !ban @user1
    unban = !unban
    # (preceding character and name of the unban command, example !unban) if you type the above command and @username, the use will be unbanned and his account re-activated. For example !unban @user1
    # it does not work on admin accounts. to unban the user, since the @username will not appear as a slack username (not linkable to the user), try and copy/paste the username from the !ban command, and it will appear clickable and the unban will work.
    # the above commands in the [seccommands] category are only available to administrators
    
    [secfeatures]
    pinsoft = YES
    # (YES or NO ) if it's enabled, soft pinned messages protection is enabled. Only admins are able to pin messages, on a pin by a non admin user the message will be unpinned. On an unpin by  a non admin user the message will be pinned. A message will be generated for both events
    pinhard = YES   
    #  (YES or NO ) if it's enabled, hard pinned messages protection is enabled. Only admins are able to pin messages, on a pin by a non admin user the message will be unpinned and the user kicked from the channel. On an unpin by  a non admin user the message will be pinned and the user kicked from the channel. A message will be generated for both events. It requires enabled pinsoft
    topicsoft = YES
    #  (YES or NO ) if it's enabled, soft topic and purpose protection is enabled. Only admins are able to change a channel's topic or purpose. On a change by a non admin user, the topic or purpose will reset as they were. A message will be generated
    topichard = YES
    #  (YES or NO ) if it's enabled, soft topic and purpose protection is enabled. Only admins are able to change a channel's topic or purpose. On a change by a non admin user, the topic or purpose will reset as they were, and the user will be kicked out of the room. A message will be generated. It requires enabled topicsoft
    forbidwords = YES
    # (YES or NO ) if it's enabled, messages that contain forbidden words will be deleted and the users that sent the messages will be kicked 
    #many times malicious users upload files with QR codes that lead to dodgy pages when scanned. This option disables all file uploads and notifies in the report room.
    blockurls = YES
    #  (YES or NO ) the above option will disable all clickable urls. If a url is pasted in the form that it will need to be copied and pasted in the browser, it will be accepted.
    slackbotchannel = YES
    #  (YES or NO )the above option will block all slackbot messages published in a channel, either those are from slackbot replies (recommend not to use that feature, you can set simplecommands for that ) or from slackbot reminders in the channel, like /remind #general test in 1 seconds. In case of a reminder triggered by a user, you will get a message.
    namereports = YES
    # (YES or NO ) the above option will report all username/name changes in the bot reports room
    nameban = yES
    # (YES or NO ) the above option will ban all users what will chance their display name (@username) to an admins username or a username from the namebanlist. It requires a webtoken to be configured
    forbidrogue = YES
    # (YES or NO) if enabled the above will delete all messages that look like commands
    deleth = YES
    # (YES or NO) if enabled all messages that look like an eth/btc address or an eth private key will be deleted
    filedisable = YES
    # (YES or NO) if enabled all file uploads by non admins will be deleted

    [secfeaturesconf]
    namebanlist = userbfxzj1,userbfxzj2,userbfxzj3,slackbot
    # (single or comma separated usernames can also be left empty) these usernames are those (including the admin's user names ) that if a user will change his usename to match one of those and the nameban option is set to yes and there is an active webtoken configured, they will be banned (deactivated account ) from the workspace with a message being generated.
    alloweddomains = kyber.network,coinmarketcap.com,reddit.com,github.com
    # (single or comma separated domain list ) if the blockurls option is set to YES, the above comma separated list of domains will be allowed
    forbidroguechar = !
    # (please use "!" or "$" or "/") this takes the single character posted ,  and if a user types a command like !test1 which is does not exist ( in our config file only !test or !faq would be valid ) then this command is deleted. Sometimes in big rooms when a user types !something , the others type it to  to see what it does. This option avoids confusion
    forbidden = shit,fuck
    # (word or commaseparaded word list)  if anyone of those words is in a sentence, the sentence is deleted and the user kicked out of the channel that this was posted. `Ralf uc kids` will match fuck so there might be some false positives :) 
    
    
